# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
  solution_path: 'src/ProductCatalog.sln'
  main_project_name: 'ProductCatalog'
  main_project_path: 'src/ProductCatalog/ProductCatalog.csproj'
  main_project_folder: 'src/ProductCatalog'
  netcore_version: '3.1'

parameters:
  - name: STAGING
    type: string
    default: ''
    displayName: 'Tag to deploy in staging. Caution: check if the inserted tag is one (major/minor/patch) version higher than the latest tag in master.'

trigger:
  branches:
    include:
    - release/*  
    - hotfix/*
    #- develop
    #- master
    #- feature/*
    #- bugfix/*
    #- requirement/*
    #- improvement/*
  tags:
    include: 
    - '*'

pr:
  branches:
    include:
    - develop
    - master

pool:
  name: Default

stages:
- stage: BuildApp
  jobs:
  - job: Build
    condition: succeeded()
    steps:
    - script: | 
        echo "$(Build.BuildNumber)"
        nuget_args="--configfile $(nuget_config)"
        echo "##vso[task.setvariable variable=nuget_args]$nuget_args"
        echo "NugetArgs: --configfile $(nuget_config)"
      displayName: Check nuget custom config
      condition: contains(variables['nuget_config'], '.config')
    - script: |
        pwd && ls -la 
        dotnet restore "$(solution_path)" $(nuget_args)
        dotnet publish -c Release -o $(System.DefaultWorkingDirectory)/bin "$(main_project_path)"
        mkdir artifact
        cp -r $(System.DefaultWorkingDirectory)/bin artifact/bin
      displayName: Build Application
    - task: PublishPipelineArtifact@1
      displayName: Store Application Artifact
      inputs:
        path: $(System.DefaultWorkingDirectory)/artifact
        artifact: $(main_project_name)
